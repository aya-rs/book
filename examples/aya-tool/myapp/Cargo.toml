[package]
name = "myapp"
version = "0.1.0"
edition = "2021"
publish = false

[dependencies]
aya = { git = "https://github.com/aya-rs/aya" }
aya-log = { git = "https://github.com/aya-rs/aya" }
myapp-common = { path = "../myapp-common", features = ["user"] }
anyhow = "1"
ctrlc = "3.2"
tokio = { version = "1.25", features = [
  "macros",
  "rt",
  "rt-multi-thread",
  "net",
  "signal",
] }
env_logger = "0.11"
log = "0.4"

[build-dependencies]
aya-build = { git = "https://github.com/aya-rs/aya" }
anyhow = "1"
# TODO(https://github.com/rust-lang/cargo/issues/12375): this should be an artifact dependency, but
# it's not possible to tell cargo to use `-Z build-std` to build it. We cargo-in-cargo in the build
# script to build this, but we want to teach cargo about the dependecy so that cache invalidation
# works properly.
#
# Note also that https://github.com/rust-lang/cargo/issues/10593 occurs when `target = ...` is added
# to an artifact dependency; it seems possible to work around that by setting `resolver = "1"` in
# Cargo.toml in the workspace root.
#
# Finally note that *any* usage of `artifact = ...` in *any* Cargo.toml in the workspace breaks
# workflows with stable cargo; stable cargo outright refuses to load manifests that use unstable
# features.
myapp-ebpf = { path = "../myapp-ebpf" }

[[bin]]
name = "myapp"
path = "src/main.rs"
